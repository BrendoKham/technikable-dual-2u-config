/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <400>;
};

/ {
    chosen { zmk,matrix_transform = &dual_2u_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <4 1>;
            then-layer = <2>;
        };
    };

    macros {
        taskmanager: taskmanager {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp ESCAPE>;
            label = "TASKMANAGER";
        };
    };

    combos {
        compatible = "zmk,combos";

        ToggleBaseLayer {
            bindings = <&tog 0>;
            key-positions = <1 2 3>;
        };

        ToggleNumberLayer {
            bindings = <&tog 1>;
            key-positions = <13 14 15>;
        };

        ToggleNavLayer {
            bindings = <&tog 2>;
            key-positions = <25 26 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&mt TILDE ESCAPE  &kp Q  &kp W      &kp E         &kp R        &kp T                   &kp Y  &kp U     &mt LEFT_PARENTHESIS I  &mt RIGHT_PARENTHESIS LS(O)  &mt MINUS P            &mt EQUAL BACKSPACE
&kp TAB           &kp A  &kp S      &kp D         &kp F        &kp G                   &kp H  &kp J     &kp K                   &kp L                        &mt LEFT_BRACKET SEMI  &mt SINGLE_QUOTE RIGHT_BRACKET
&kp LSHFT         &kp Z  &kp X      &kp C         &kp V        &kp B                   &kp N  &kp M     &kp COMMA               &kp DOT                      &kp FSLH               &kp RET
                         &kp LCTRL  &kp LEFT_ALT  &lt 1 SPACE         &mt ENTER SPACE         &kp HOME  &kp RCTRL
            >;
        };

        num_layer {
            bindings = <
&kp SLASH  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH  &trans          &kp PAGE_UP    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp PLUS   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &trans          &kp PAGE_DOWN  &kp HOME              &kp END                &kp SEMICOLON     &kp SINGLE_QUOTE   &trans
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans     &trans          &trans         &trans                &trans                 &kp LESS_THAN     &kp GREATER_THAN   &trans
                         &kp NUMBER_0  &kp EQUAL     &trans             &trans                 &trans                &trans
            >;
        };

        nav_layer {
            bindings = <
&bt BT_CLR  &trans          &trans        &trans        &trans        &trans                &trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp C_VOLUME_UP
&trans      &kp LEFT_ARROW  &kp DOWN      &kp UP_ARROW  &kp RIGHT     &trans                &trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp C_VOLUME_DOWN
&trans      &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans  &kp F9  &kp F10  &kp F11  &kp F11  &kp K_MUTE
                            &trans        &trans        &trans                      &trans          &trans  &trans
            >;
        };
    };
};
