/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &dual_2u_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <4 1>;
            then-layer = <2>;
        };
    };

    macros {
        taskmanager: taskmanager {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp ESCAPE>;
            label = "TASKMANAGER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&mt TILDE ESCAPE  &kp Q  &kp W      &kp E           &kp R        &kp T             &kp Y  &kp U     &kp I      &kp O    &kp P     &kp BACKSPACE
&kp TAB           &kp A  &kp S      &kp D           &kp F        &kp G             &kp H  &kp J     &kp K      &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LSHFT         &kp Z  &kp X      &kp C           &kp V        &kp B             &kp N  &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RET
                         &kp LCTRL  &lt 2 LEFT_ALT  &lt 1 SPACE         &kp SPACE         &kp RALT  &kp RCTRL
            >;
        };

        num_layer {
            bindings = <
&kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LS(RIGHT_BRACKET)  &kp RBKT           &trans  &trans  &trans  &trans  &trans  &trans
&kp PLUS          &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS              &kp EQUAL          &trans  &trans  &trans  &trans  &trans  &trans
&kp KP_MULTIPLY   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DIVIDE          &kp BSLH           &trans  &trans  &trans  &trans  &trans  &trans
                                &kp NUMBER_0  &kp EQUAL     &trans                            &trans          &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&bt BT_CLR  &trans          &trans        &trans        &trans        &trans                &trans  &trans    &trans     &trans     &trans    &kp DEL
&trans      &kp LEFT_ARROW  &kp DOWN      &kp UP_ARROW  &kp RIGHT     &trans                &trans  &kp LARW  &kp DARW   &kp UARW   &kp RARW  &trans
&trans      &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END   &trans
                            &trans        &trans        &trans                      &trans          &trans    &trans
            >;
        };
    };
};
